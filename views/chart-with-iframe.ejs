<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles.css" />
    <title>My EHR - Patient Chart</title>
</head>
<body>
    <div class="container">
        <div class="column">
            <h1>My EHR Patient Chart</h1>
            <h2><%= item.name %></h2>
            <p><strong>Age:</strong> <%= item.age %></p>
            <p><strong>Diagnosis:</strong> <%= item.diagnosis %></p>
            <textarea id="progress-note" style="width: 320px; height: 240px;"></textarea>
        </div>
        <div class="column">
          <iframe
            src="<%= process.env.BLUEPRINT_IFRAME_URL %>"
            id="blueprint-frame"
            width="350px"
            height="550px"
            allow="microphone; display-capture; clipboard-read; clipboard-write; screen-wake-lock;"
            style="visibility: hidden;"
          >
          </iframe>
        </div>
    </div>

    <script>
      // Decode HTML entities and parse JSON string.
      // If your application uses server-side templating you might need to do
      // something like this so that the access token is properly transferred
      // to the front end. If you are using a front-end framework like React,
      // then passing the access token from the backend to your front end and
      // then to Blueprint is more straightforward.
      function decodeHtmlEntities(encodedString) {
        const textArea = document.createElement('textarea');
        textArea.innerHTML = encodedString;
        return textArea.value;
      }
    </script>

    <script>
      window.addEventListener('message', event => {
        if (event.data?.type === 'BP_CLINICIAN_NOT_AUTHENTICATED') {
          // Automatically authenticate the clinian.
          const iframe = document.getElementById('blueprint-frame');
          const encodedTokens = '<%- JSON.stringify(clinicianTokens) %>';
          const clinicianTokens = JSON.parse(decodeHtmlEntities(encodedTokens));

          console.log('Clinician not authenticated. Authenticating now...', clinicianTokens);

          iframe.contentWindow.postMessage(
            {
              type: 'BP_AUTHENTICATE',
              authTokens: clinicianTokens
            },
            '*'
          );
        }

        // Wait for the Blueprint frame to load before providing settings and selecting a client.
        if (event.data?.type === 'BP_WIDGET_CONTEXT_LOADED') {
          const iframe = document.getElementById('blueprint-frame');

          console.log('Blueprint frame loaded. Providing settings and selecting client...');
          
          // Provide settings.
          iframe.contentWindow.postMessage(
            {
              type: 'BP_SETTINGS',
              settings: {
                isAlwaysOpen: true, // This disables close/minimize functionality.
                copyNoteButtonText: 'Export to EHR', // Default is "Copy Note"
                patientReference: 'Patient', // Default is "Client"
                hideTreatmentPlan: true // Default is false
              }
            },
            '*'
          );

          // Select the client.
          iframe.contentWindow?.postMessage(
            {
              type: 'BP_SELECT_CLIENT',
              clientId: '<%= item.blueprintId %>'
            },
            '*'
          );
          
          // Show the Blueprint frame now that the clinician is authenticated and a client has been selected.
          iframe.style.visibility = 'visible';
        }
      })
    </script>
    <p>
        <a href="/patients">Back to Patient List</a>
    </p>
</body>
</html>
