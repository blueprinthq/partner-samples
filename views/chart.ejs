<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles.css" />
    <title>My EHR - Patient Chart</title>
</head>
<body>
    <div class="container">
        <div class="column">
            <h1>My EHR Patient Chart</h1>
            <h2><%= item.name %></h2>
            <p><strong>Age:</strong> <%= item.age %></p>
            <p><strong>Diagnosis:</strong> <%= item.diagnosis %></p>
            <textarea id="progress-note" style="width: 320px; height: 240px;"></textarea>
        </div>
        <div class="column">
            <div id="blueprint-container"></div>
        </div>
    </div>

    <!-- Customize the embedded Blueprint user interface. -->
    <script>
        window.blueprintSettings = {
            containerId: 'blueprint-container',
            copyNoteButtonText: 'Export to EHR', // Default is "Copy Note"
            patientReference: 'Patient', // Default is "Client"
            hideTreatmentPlan: false, // Default is false
            position: 'bottom-left',
            openButtonIcon: '',
            closeButtonIcon: '',
            buttonColor: '#2D54E8',
            isDraggable: false,
            isAlwaysOpen: true,
            width: '400px',
            height: '600px'
        }
    </script>
    <script src="<%= process.env.BLUEPRINT_WIDGET_URL %>"></script>

    <!-- Automatically select a client. -->
    <script>
        // Decode HTML entities and parse JSON string.
        // If your application uses server-side templating you might need to do
        // something like this so that the access token is properly transferred
        // to the front end. If you are using a front-end framework like React,
        // then passing the access token from the backend to your front end and
        // then to Blueprint is more straightforward.
        function decodeHtmlEntities(encodedString) {
            const textArea = document.createElement('textarea');
            textArea.innerHTML = encodedString;
            return textArea.value;
        }

        const encodedTokens = '<%- JSON.stringify(clinicianTokens) %>';
        const clinicianTokens = JSON.parse(decodeHtmlEntities(encodedTokens));

        Blueprint.authenticate(clinicianTokens, '<%= clinicianId %>');
        // Selecting a client requires an authenticated clinician.
        // Upon selecting a client, a new session is created.
        // Optional properties can be passed to initialize the session with custom data.
        Blueprint.selectClient(`<%= item.blueprintId %>`);

        // This is the signal that the user is done editing the note.
        Blueprint.onCopyNoteClicked((note) => {
            console.log('Exporting note to EHR...');
            const progressNote = document.getElementById('progress-note');
            progressNote.value = note.note;
        });
    </script>

    <p>
        <a href="/patients">Back to Patient List</a>
    </p>
</body>
</html>
